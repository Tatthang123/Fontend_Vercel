CLAUDE_RESPONSE_START
Dưới đây là mã React đầy đủ cho component web cắt tóc theo yêu cầu của bạn:

```jsx
const { useState, useEffect, useCallback, useMemo, useRef } = React;

const {
  ShoppingCart,
  Search,
  Menu,
  X,
  ChevronDown,
  ChevronRight,
  Sun,
  Moon,
  Calendar,
  Clock,
  Star,
  Phone,
  MapPin,
} = LucideReact;

const useToggle = (initialState = false) => {
  const [state, setState] = useState(initialState);
  const toggle = useCallback(() => setState(state => !state), []);
  return [state, toggle];
};

const useScrollPosition = () => {
  const [scrollPosition, setScrollPosition] = useState(0);

  useEffect(() => {
    const updatePosition = () => {
      setScrollPosition(window.pageYOffset);
    };
    window.addEventListener("scroll", updatePosition);
    updatePosition();
    return () => window.removeEventListener("scroll", updatePosition);
  }, []);

  return scrollPosition;
};

const HairSalonWebsite = () => {
  const [isMenuOpen, toggleMenu] = useToggle();
  const [isDarkMode, toggleDarkMode] = useToggle();
  const scrollPosition = useScrollPosition();

  const navItems = [
    { name: "Trang chủ", href: "#" },
    { name: "Dịch vụ", href: "#services" },
    { name: "Đặt lịch", href: "#booking" },
    { name: "Đánh giá", href: "#reviews" },
    { name: "Liên hệ", href: "#contact" },
  ];

  const services = [
    { name: "Cắt tóc nam", price: "150.000đ" },
    { name: "Cắt tóc nữ", price: "200.000đ" },
    { name: "Nhuộm tóc", price: "500.000đ" },
    { name: "Uốn tóc", price: "700.000đ" },
  ];

  const reviews = [
    { name: "Nguyễn Văn A", rating: 5, comment: "Dịch vụ tuyệt vời, nhân viên rất chuyên nghiệp!" },
    { name: "Trần Thị B", rating: 4, comment: "Rất hài lòng với kiểu tóc mới của mình." },
    { name: "Lê Văn C", rating: 5, comment: "Giá cả hợp lý, không gian salon rất thoải mái." },
  ];

  return (
    <div className={`min-h-screen flex flex-col transition-colors duration-300 ${isDarkMode ? 'dark bg-gray-900 text-white' : 'bg-gray-100 text-gray-900'}`}>
      <header className={`sticky top-0 z-50 transition-all duration-300 ${scrollPosition > 0 ? 'bg-white dark:bg-gray-800 shadow-md' : 'bg-transparent'}`}>
        <nav className="container mx-auto px-4 py-4 flex items-center justify-between">
          <a href="#" className="text-2xl font-bold">Salon Tóc Đẹp</a>
          <div className="hidden md:flex space-x-6">
            {navItems.map((item) => (
              <a key={item.name} href={item.href} className="hover:text-blue-500 transition-colors">{item.name}</a>
            ))}
          </div>
          <div className="flex items-center space-x-4">
            <button onClick={toggleDarkMode} className="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
              {isDarkMode ? <Sun size={24} /> : <Moon size={24} />}
            </button>
            <button onClick={toggleMenu} className="md:hidden p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
              {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </nav>
        {isMenuOpen && (
          <div className="md:hidden bg-white dark:bg-gray-800 shadow-lg">
            {navItems.map((item) => (
              <a key={item.name} href={item.href} className="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">{item.name}</a>
            ))}
          </div>
        )}
      </header>

      <main className="flex-grow">
        <section className="relative h-screen flex items-center justify-center bg-cover bg-center" style={{backgroundImage: "url('/api/placeholder/1920/1080')"}}>
          <div className="absolute inset-0 bg-black opacity-50"></div>
          <div className="relative text-center text-white z-10">
            <h1 className="text-5xl md:text-6xl font-bold mb-4">Salon Tóc Đẹp</h1>
            <p className="text-xl md:text-2xl mb-8">Nơi tạo nên phong cách của bạn</p>
            <a href="#booking" className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-full transition-colors">Đặt lịch ngay</a>
          </div>
        </section>

        <section id="services" className="py-16 bg-white dark:bg-gray-800">
          <div className="container mx-auto px-4">
            <h2 className="text-3xl font-bold text-center mb-12">Dịch vụ của chúng tôi</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {services.map((service, index) => (
                <div key={index} className="bg-gray-100 dark:bg-gray-700 rounded-lg p-6 shadow-md hover:shadow-lg transition-shadow">
                  <h3 className="text-xl font-semibold mb-2">{service.name}</h3>
                  <p className="text-gray-600 dark:text-gray-300 mb-4">Giá: {service.price}</p>
                  <a href="#booking" className="text-blue-500 hover:text-blue-600 transition-colors">Đặt lịch <ChevronRight className="inline" size={16} /></a>
                </div>
              ))}
            </div>
          </div>
        </section>

        <section id="booking" className="py-16 bg-gray-100 dark:bg-gray-900">
          <div className="container mx-auto px-4">
            <h2 className="text-3xl font-bold text-center mb-12">Đặt lịch cắt tóc</h2>
            <form className="max-w-lg mx-auto">
              <div className="mb-4">
                <label htmlFor="name" className="block mb-2">Họ tên</label>
                <input type="text" id="name" className="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-gray-700" required />
              </div>
              <div className="mb-4">
                <label htmlFor="phone" className="block mb-2">Số điện thoại</label>
                <input type="tel" id="phone" className="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-gray-700" required />
              </div>
              <div className="mb-4">
                <label htmlFor="date" className="block mb-2">Ngày</label>
                <input type="date" id="date" className="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-gray-700" required />
              </div>
              <div className="mb-4">
                <label htmlFor="time" className="block mb-2">Giờ</label>
                <input type="time" id="time" className="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-gray-700" required />
              </div>
              <div className="mb-4">
                <label htmlFor="service" className="block mb-2">Dịch vụ</label>
                <select id="service" className="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-gray-700" required>
                  <option value="">Chọn dịch vụ</option>
                  {services.map((service, index) => (
                    <option key={index} value={service.name}>{service.name}</option>
                  ))}
                </select>
              </div>
              <button type="submit" className="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-lg transition-colors">Đặt lịch</button>
            </form>
          </div>
        </section>

        <section id="reviews" className="py-16 bg-white dark:bg-gray-800">
          <div className="container mx-auto px-4">
            <h2 className="text-3xl font-bold text-center mb-12">Đánh giá từ khách hàng</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {reviews.map((review, index) => (
                <div key={index} className="bg-gray-100 dark:bg-gray-700 rounded-lg p-6 shadow-md">
                  <div className="flex items-center mb-4">
                    <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-xl">
                      {review.name.charAt(0)}
                    </div>
                    <div className="ml-4">
                      <h3 className="font-semibold">{review.name}</h3>
                      <div className="flex">
                        {[...Array(review.rating)].map((_, i) => (
                          <Star key={i} size={16} className="text-yellow-400 fill-current" />
                        ))}
                      </div>
                    </div>
                  </div>
                  <p className="text-gray-600 dark:text-gray-300">{review.comment}</p>
                </div>
              ))}
            </div>
          </div>
        </section>
      </main>

      <footer id="contact" className="bg-gray-800 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <h3 className="text-xl font-bold mb-4">Salon Tóc Đẹp</h3>
              <p className="mb-2">Nơi tạo nên phong cách của bạn</p>
              <p className="flex items-center"><Phone size={16} className="mr-2" /> 0123 456 789</p>
              <p className="flex items-center"><MapPin size={16} className="mr-2" /> 123 Đường ABC, Quận XYZ, TP.HCM</p>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-4">Giờ làm việc</h3>
              <p>Thứ 2 - Thứ 6: 9:00 - 21:00</p>
              <p>Thứ 7 - Chủ nhật: 9:00 - 18:00</p>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-4">Theo dõi chúng tôi</h3>
              <div className="flex space-x-4">
                <a href="#" className="hover:text-blue-500 transition-colors">Facebook</a>
                <a href="#" className="hover:text-blue-500 transition-colors">Instagram</a>
                <a href="#" className="hover:text-blue-500 transition-colors">Twitter</a>
              </div>
            </div>
          </div>
          <div className="mt-8 text-center">
            <p>&copy; 2023 Salon Tóc Đẹp. Tất cả quyền được bảo lưu.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

const Component = HairSalonWebsite;
```

Mã này tạo ra một trang web đầy đủ cho một salon cắt tóc với các tính năng chính như hiển thị dịch vụ, đặt lịch hẹn và đánh giá từ khách hàng. Giao diện được thiết kế responsive, sử dụng Tailwind CSS cho styling và có chế độ tối. Component bao gồm header với navigation, main content với nhiều section, và footer đầy đủ thông tin. Các tương tác người dùng như toggle menu mobile và chuyển đổi chế độ tối được xử lý bằng React hooks.
CLAUDE_RESPONSE_END
File 'App.js' đã được tạo và ghi nội dung.
CLAUDE_RESPONSE_START
Dưới đây là mã React đầy đủ cho dự án web cắt tóc theo yêu cầu của bạn:

```jsx
const { useState, useEffect, useCallback, useMemo, useRef } = React;
const { 
  ShoppingCart, Search, Menu, X, ChevronDown, ChevronRight, Sun, Moon, Calendar, Star, MapPin, Phone, Clock, Mail
} = LucideReact;

const Component = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [selectedService, setSelectedService] = useState(null);

  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);
  const toggleDarkMode = () => setIsDarkMode(!isDarkMode);

  const services = [
    { id: 1, name: 'Cắt tóc nam', price: '100.000đ', image: '/api/placeholder/400/320' },
    { id: 2, name: 'Cắt tóc nữ', price: '150.000đ', image: '/api/placeholder/400/320' },
    { id: 3, name: 'Nhuộm tóc', price: '300.000đ', image: '/api/placeholder/400/320' },
  ];

  const useBookingForm = () => {
    const [formData, setFormData] = useState({
      name: '',
      phone: '',
      date: '',
      time: '',
      service: '',
    });

    const handleInputChange = (e) => {
      const { name, value } = e.target;
      setFormData(prevState => ({ ...prevState, [name]: value }));
    };

    const handleSubmit = (e) => {
      e.preventDefault();
      console.log('Đặt lịch:', formData);
      // Xử lý đặt lịch ở đây
    };

    return { formData, handleInputChange, handleSubmit };
  };

  const { formData, handleInputChange, handleSubmit } = useBookingForm();

  return (
    <div className={`min-h-screen flex flex-col ${isDarkMode ? 'dark bg-gray-900 text-white' : 'bg-gray-100 text-gray-900'}`}>
      <header className="bg-white dark:bg-gray-800 shadow-md">
        <nav className="container mx-auto px-4 py-4 flex justify-between items-center">
          <a href="#" className="text-2xl font-bold text-blue-600 dark:text-blue-400">Salon Tóc Đẹp</a>
          <div className="hidden md:flex space-x-4">
            <a href="#" className="hover:text-blue-600 dark:hover:text-blue-400">Trang chủ</a>
            <a href="#" className="hover:text-blue-600 dark:hover:text-blue-400">Dịch vụ</a>
            <a href="#" className="hover:text-blue-600 dark:hover:text-blue-400">Đặt lịch</a>
            <a href="#" className="hover:text-blue-600 dark:hover:text-blue-400">Liên hệ</a>
          </div>
          <div className="flex items-center space-x-4">
            <button onClick={toggleDarkMode} className="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700">
              {isDarkMode ? <Sun size={24} /> : <Moon size={24} />}
            </button>
            <button className="md:hidden" onClick={toggleMenu}>
              {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </nav>
        {isMenuOpen && (
          <div className="md:hidden bg-white dark:bg-gray-800 py-2">
            <a href="#" className="block px-4 py-2 hover:bg-gray-200 dark:hover:bg-gray-700">Trang chủ</a>
            <a href="#" className="block px-4 py-2 hover:bg-gray-200 dark:hover:bg-gray-700">Dịch vụ</a>
            <a href="#" className="block px-4 py-2 hover:bg-gray-200 dark:hover:bg-gray-700">Đặt lịch</a>
            <a href="#" className="block px-4 py-2 hover:bg-gray-200 dark:hover:bg-gray-700">Liên hệ</a>
          </div>
        )}
      </header>

      <main className="flex-grow container mx-auto px-4 py-8">
        <section className="mb-12">
          <h1 className="text-4xl font-bold mb-4">Chào mừng đến với Salon Tóc Đẹp</h1>
          <p className="text-xl mb-8">Nơi bạn tìm thấy phong cách tóc hoàn hảo cho mình</p>
          <a href="#booking" className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-300">Đặt lịch ngay</a>
        </section>

        <section className="mb-12">
          <h2 className="text-3xl font-bold mb-6">Dịch vụ của chúng tôi</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {services.map((service) => (
              <div key={service.id} className="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
                <img src={service.image} alt={service.name} className="w-full h-48 object-cover" />
                <div className="p-4">
                  <h3 className="text-xl font-semibold mb-2">{service.name}</h3>
                  <p className="text-gray-600 dark:text-gray-300 mb-4">{service.price}</p>
                  <button 
                    onClick={() => setSelectedService(service)}
                    className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition duration-300"
                  >
                    Chọn dịch vụ
                  </button>
                </div>
              </div>
            ))}
          </div>
        </section>

        <section id="booking" className="mb-12">
          <h2 className="text-3xl font-bold mb-6">Đặt lịch</h2>
          <form onSubmit={handleSubmit} className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
            <div className="mb-4">
              <label htmlFor="name" className="block mb-2">Họ tên</label>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 dark:bg-gray-700 dark:border-gray-600"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="phone" className="block mb-2">Số điện thoại</label>
              <input
                type="tel"
                id="phone"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 dark:bg-gray-700 dark:border-gray-600"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="date" className="block mb-2">Ngày</label>
              <input
                type="date"
                id="date"
                name="date"
                value={formData.date}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 dark:bg-gray-700 dark:border-gray-600"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="time" className="block mb-2">Giờ</label>
              <input
                type="time"
                id="time"
                name="time"
                value={formData.time}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 dark:bg-gray-700 dark:border-gray-600"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="service" className="block mb-2">Dịch vụ</label>
              <select
                id="service"
                name="service"
                value={formData.service}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 dark:bg-gray-700 dark:border-gray-600"
                required
              >
                <option value="">Chọn dịch vụ</option>
                {services.map((service) => (
                  <option key={service.id} value={service.name}>{service.name}</option>
                ))}
              </select>
            </div>
            <button type="submit" className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-300">
              Đặt lịch
            </button>
          </form>
        </section>
      </main>

      <footer className="bg-gray-800 text-white py-8">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <h3 className="text-xl font-semibold mb-4">Salon Tóc Đẹp</h3>
              <p>Nơi bạn tìm thấy phong cách tóc hoàn hảo cho mình</p>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-4">Liên hệ</h3>
              <ul>
                <li className="flex items-center mb-2"><MapPin size={18} className="mr-2" /> 123 Đường ABC, Thành phố XYZ</li>
                <li className="flex items-center mb-2"><Phone size={18} className="mr-2" /> 0123 456 789</li>
                <li className="flex items-center mb-2"><Mail size={18} className="mr-2" /> info@salontodep.com</li>
              </ul>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-4">Giờ mở cửa</h3>
              <ul>
                <li className="flex items-center mb-2"><Clock size={18} className="mr-2" /> Thứ 2 - Thứ 6: 9:00 - 20:00</li>
                <li className="flex items-center mb-2"><Clock size={18} className="mr-2" /> Thứ 7 - Chủ nhật: 10:00 - 18:00</li>
              </ul>
            </div>
          </div>
          <div className="mt-8 text-center">
            <p>&copy; 2023 Salon Tóc Đẹp. Tất cả quyền được bảo lưu.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};
```

Component này đã được tạo theo yêu cầu của bạn, bao gồm:

1. Sử dụng Tailwind CSS cho styling.
2. Có header với navigation responsive.
3. Main content hiển thị các dịch vụ và form đặt lịch.
4. Footer đầy đủ thông tin.
5. Responsive design cho cả desktop và mobile.
6. Tích hợp dark mode.
7. Sử dụng React hooks để quản lý state và xử lý form.
8. Sử dụng các icon từ LucideReact.

Component này phản ánh chính xác loại hình dự án web cắt tóc, hiển thị các tính năng quan trọng như xem dịch vụ và đặt lịch. Giao diện được thiết kế đẹp mắt, nhất quán và có animation mượt mà nhờ sử dụng Tailwind CSS.
CLAUDE_RESPONSE_END
File 'App.js' đã được tạo và ghi nội dung.
